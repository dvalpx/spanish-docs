(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{233:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("div",{pre:!0},[s("h1",{pre:!0,attrs:{id:"autorizacion"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#autorizacion","aria-hidden":"true"}},[a._v("#")]),a._v(" Autorización")]),a._v(" "),s("ul",[s("li",[s("a",{pre:!0,attrs:{href:"#introduction"}},[a._v("Introducción")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#gates"}},[a._v("Gates")]),a._v(" "),s("ul",[s("li",[s("a",{pre:!0,attrs:{href:"#writing-gates"}},[a._v("Escribiendo Gates")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#authorizing-actions-via-gates"}},[a._v("Autorizando acciones")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#intercepting-gate-checks"}},[a._v("Interceptando Comprobaciones De Gates")])])])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#creating-policies"}},[a._v("Creando Políticas")]),a._v(" "),s("ul",[s("li",[s("a",{pre:!0,attrs:{href:"#generating-policies"}},[a._v("Generando Políticas")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#registering-policies"}},[a._v("Registrando Políticas")])])])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#writing-policies"}},[a._v("Escribiendo Políticas")]),a._v(" "),s("ul",[s("li",[s("a",{pre:!0,attrs:{href:"#policy-methods"}},[a._v("Métodos de Política")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#methods-without-models"}},[a._v("Métodos sin Modelos")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#guest-users"}},[a._v("Usuarios Invitados")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#policy-filters"}},[a._v("Filtros de Política")])])])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#authorizing-actions-using-policies"}},[a._v("Autorizando acciones usando Políticas")]),a._v(" "),s("ul",[s("li",[s("a",{pre:!0,attrs:{href:"#via-the-user-model"}},[a._v("Vía el Modelo de Usuario")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#via-middleware"}},[a._v("Vía Middleware")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#via-controller-helpers"}},[a._v("Vía Helpers del Controlador")])]),a._v(" "),s("li",[s("a",{pre:!0,attrs:{href:"#via-blade-templates"}},[a._v("Vía Plantillas de Blade")])])])])]),a._v(" "),s("p",[s("a",{pre:!0,attrs:{name:"introduction"}})]),a._v(" "),s("h2",{pre:!0,attrs:{id:"introduccion"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#introduccion","aria-hidden":"true"}},[a._v("#")]),a._v(" Introducción")]),a._v(" "),s("p",[a._v("Además de proveer servicios de "),s("a",{pre:!0,attrs:{href:"/docs/%7B%7Bversion%7D%7D/authentication"}},[a._v("autenticación")]),a._v(" por defecto, Laravel además provee una forma simple de autorizar acciones del usuario contra un recurso dado. Como con la autenticación, el enfoque de Laravel para la autorización es simple, y hay dos maneras principales de autorizar acciones: "),s("strong",[a._v("gates")]),a._v(" y "),s("strong",[a._v("policies")]),a._v(" (puertas y políticas).")]),a._v(" "),s("p",[a._v("Piensa en los gates y políticas como rutas y controladores. Los Gates proveen una manera simple, basada en funciones anónimas, para definir las reglas de autorización; mientras que las políticas, como los controladores, agrupan la lógica para un modelo o recurso en específico. Vamos a explorar los gates primero y luego las políticas.")]),a._v(" "),s("p",[a._v("No necesitas elegir entre el uso exclusivo de gates o de políticas cuando construyas una aplicación. Lo más probable es que la mayoría de las aplicaciones contengan una mezcla de gates y de políticas ¡Y eso está completamente bien! Los gates son más aplicables a acciones que no estén relacionadas a ningún modelo o recurso, como por ejemplo ver un tablero en el panel de administración. Por otro lado, las políticas deberan ser usadas cuando desees autorizar una acción para un modelo o recurso en particular.")]),a._v(" "),s("p",[s("a",{pre:!0,attrs:{name:"gates"}})]),a._v(" "),s("h2",{pre:!0,attrs:{id:"gates"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#gates","aria-hidden":"true"}},[a._v("#")]),a._v(" Gates")]),a._v(" "),s("p",[s("a",{pre:!0,attrs:{name:"writing-gates"}})]),a._v(" "),s("h3",{pre:!0,attrs:{id:"escribiendo-gates"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#escribiendo-gates","aria-hidden":"true"}},[a._v("#")]),a._v(" Escribiendo Gates")]),a._v(" "),s("p",[a._v("Los gates son funciones anónimas (Closures) que determinan si un usuario está autorizado para ejecutar una acción dada y típicamente son definidos en la clase "),s("code",[a._v("App\\Providers\\AuthServiceProvider")]),a._v(" usando el facade "),s("code",[a._v("Gate")]),a._v(". Los gates siempre reciben la instancia del usuario conectado como el primer argumento y pueden, opcionalmente, recibir argumentos adicionales que sean relevantes, como por ejemplo un modelo de Eloquent:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n* Register any authentication / authorization services.\n*\n* @return void\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerPolicies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("user_id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("Los gates además pueden ser definidos escribiendo la clase y método a llamar como una cadena de texto "),s("code",[a._v("Class@method")]),a._v(", como cuando definimos controladores en las rutas:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n* Register any authentication / authorization services.\n*\n* @return void\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerPolicies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy@update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{pre:!0,attrs:{id:"gates-de-recursos"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#gates-de-recursos","aria-hidden":"true"}},[a._v("#")]),a._v(" Gates de Recursos")]),a._v(" "),s("p",[a._v("También puedes definir las habilidades de múltiples gates a la vez usando el método "),s("code",[a._v("resource")]),a._v(":")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Esto es idéntico a definir los siguientes Gates uno por uno:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts.view'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy@view'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nGate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts.create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy@create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nGate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts.update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy@update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nGate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts.delete'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'App\\Policies\\PostPolicy@delete'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Por defecto, las habilidades "),s("code",[a._v("view")]),a._v(", "),s("code",[a._v("create")]),a._v(", "),s("code",[a._v("update")]),a._v(", y "),s("code",[a._v("delete")]),a._v(" serán definidas. Además puedes sobrescribir las habilidades por defecto pasando un arreglo como tercer argumento al método "),s("code",[a._v("resource")]),a._v(". Las llaves del arreglo definen los nombre de las habilidades mientras que los valores definen los nombres de los métodos. Por ejemplo, el siguiente código creará dos nuevas definiciones de Gate - "),s("code",[a._v("posts.image")]),a._v(" y "),s("code",[a._v("posts.photo")]),a._v(":")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'posts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'PostPolicy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'image'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'updateImage'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'photo'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'updatePhoto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("a",{pre:!0,attrs:{name:"authorizing-actions-via-gates"}})]),a._v(" "),s("h3",{pre:!0,attrs:{id:"autorizando-acciones"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#autorizando-acciones","aria-hidden":"true"}},[a._v("#")]),a._v(" Autorizando Acciones")]),a._v(" "),s("p",[a._v("Para autorizar una acción usando gates, deberías usar los métodos "),s("code",[a._v("allows")]),a._v(" o "),s("code",[a._v("denies")]),a._v(". Nota que no necesitas pasar el usuario autenticado cuando llames a estos métodos. Laravel se ocupará de esto por ti de forma automática:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("allows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user can update the post...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("denies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user can't update the post...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("Si quisieras determinar si un usuario en particular está autorizado para ejecutar una acción, puedes llamar al método "),s("code",[a._v("forUser")]),a._v(" del facade "),s("code",[a._v("Gate")]),a._v(":")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("forUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("allows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The user can update the post...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("forUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("denies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update-post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The user can't update the post...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("a",{pre:!0,attrs:{name:"intercepting-gate-checks"}})]),a._v(" "),s("h4",{pre:!0,attrs:{id:"interceptando-comprobaciones-de-gates"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#interceptando-comprobaciones-de-gates","aria-hidden":"true"}},[a._v("#")]),a._v(" Interceptando Comprobaciones De Gates")]),a._v(" "),s("p",[a._v("Algunas veces, puedes querer otorgar todas las habilidades a un usuario en especifico. Puedes usar el método "),s("code",[a._v("before")]),a._v(" para definir un callback que es ejecutado antes de todas las demás comprobaciones de autorización:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("before")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ability")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isSuperAdmin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Si el callback "),s("code",[a._v("before")]),a._v(" retorna un resultado que no es null dicho resultado será considerado el resultado de la comprobación.")]),a._v(" "),s("p",[a._v("Puedes usar el método "),s("code",[a._v("after")]),a._v(" para definir un callback que será ejecutado luego de todas las demás comprobaciones de autorización:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("Gate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("after")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ability")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$arguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isSuperAdmin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Similar a la comprobación "),s("code",[a._v("before")]),a._v(", si el callback "),s("code",[a._v("after")]),a._v(" retorna un resultado que no sea null dicho resultado será considerado el resultado de la comprobación.")]),a._v(" "),s("p",[s("a",{pre:!0,attrs:{name:"creating-policies"}})]),a._v(" "),s("h2",{pre:!0,attrs:{id:"creando-politicas"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#creando-politicas","aria-hidden":"true"}},[a._v("#")]),a._v(" Creando Políticas")]),a._v(" "),s("p",[s("a",{pre:!0,attrs:{name:"generating-policies"}})]),a._v(" "),s("h3",{pre:!0,attrs:{id:"generando-politicas"}},[s("a",{pre:!0,attrs:{class:"header-anchor",href:"#generando-politicas","aria-hidden":"true"}},[a._v("#")]),a._v(" Generando Políticas")]),a._v(" "),s("p",[a._v("Los políticas son clases que organizan la lógica de autorización para un modelo o recurso en particular. Por ejemplo, si tu aplicación es un blog, puedes tener un modelo "),s("code",[a._v("Post")]),a._v(" con su correspondiente "),s("code",[a._v("PostPolicy")]),a._v(" para autorizar acciones de usuario como crear o actualizar posts.")]),a._v(" "),s("p",[a._v("Puedes generar una política usando el comando "),s("code",[a._v("make:policy")]),a._v(" "),s("a",{pre:!0,attrs:{href:"/docs/%7B%7Bversion%7D%7D/artisan"}},[a._v("artisan command")]),a._v(". La política generada será ubicada en el directorio "),s("code",[a._v("app/Policies")]),a._v(". Si el directorio no existe en tu aplicación, Laravel lo creará por ti:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("php artisan make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("policy PostPolicy\n")])])]),s("p",[a._v("El comando "),s("code",[a._v("make:policy")]),a._v(' generar una clase de política vacía. Si quieres generar una clase con los métodos de política para un "CRUD" básico ya incluidos en la clase, puedes especificar la opción '),s("code",[a._v("--model")]),a._v(" al ejecutar el comando:")]),a._v(" "),s("div",{pre:!0,attrs:{class:"language-php extra-class"}},[s("pre",{pre:!0,attrs:{"v-pre":"",class:"language-php"}},[s("code",[a._v("php artisan make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("policy PostPolicy "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Post\n")])])]),s("div",{pre:!0,attrs:{class:"tip custom-block"}},[s("p",{pre:!0,attrs:{class:"custom-block-title"}},[a._v("TIP")]),a._v(" "),s("p",[a._v("Todas las políticas son resueltas a través del "),s("a",{pre:!0,attrs:{href:"/docs/%7B%7Bversion%7D%7D/container"}},[a._v("contenedor de servicios de Laravel")]),a._v(", lo que te permite especificar las dependencias necesarias en el constructor de la política y estas serán automaticamente inyectadas.")])])]),a._v(" "),s("p",[s("a",{attrs:{name:"registering-policies"}})]),a._v(" "),s("h3",{attrs:{id:"registrando-politicas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registrando-politicas","aria-hidden":"true"}},[a._v("#")]),a._v(" Registrando Políticas")]),a._v(" "),s("p",[a._v("Una vez que la política exista, ésta necesita ser registrada. La clase "),s("code",[a._v("AuthServiceProvider")]),a._v(" incluída con las aplicaciones de Laravel contiene una propiedad "),s("code",[a._v("policies")]),a._v(" que mapea tus modelos de Eloquent a sus políticas correspondientes. Registrar una política le indicará a Laravel qué política utilizar para autorizar acciones contra un modelo dado:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Providers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Policies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("PostPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Support"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Facades"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Gate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Foundation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Support"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("AuthServiceProvider")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" ServiceProvider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AuthServiceProvider")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServiceProvider")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n    * The policy mappings for the application.\n    *\n    * @var array\n    */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$policies")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n        Post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" PostPolicy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n    * Register any application authentication / authorization services.\n    *\n    * @return void\n    */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerPolicies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),s("h4",{attrs:{id:"politica-de-auto-descubrimiento"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#politica-de-auto-descubrimiento","aria-hidden":"true"}},[a._v("#")]),a._v(" Política De Auto-Descubrimiento")]),a._v(" "),s("p",[a._v("En lugar de registrar manualmente politicas de modelos, Laravel puede auto-descubrir politicas siempre y cuando el modelo y la politica sigan la convención de nombre estándar de Laravel. Especificamente, las politicas deben estar en un directorio "),s("code",[a._v("Policies")]),a._v(" dentro del directorio que contiene los modelos. Así que, por ejemplo, los modelos pueden ser ubicados en el directorio "),s("code",[a._v("app")]),a._v(" mientras que las politicas pueden tener un sufijo. Así que, un modelo "),s("code",[a._v("User")]),a._v(" corresponderá a una clase "),s("code",[a._v("UserPolicy")]),a._v(".")]),a._v(" "),s("p",[a._v("Si te gustaría proporcionar tu propia lógica para descubrir politicas, puedes registar un callback personalizado usando el método "),s("code",[a._v("Gate::guessPolicyNamesUsing")]),a._v(". Típicamente, este método debe ser llamado desde el método "),s("code",[a._v("boot")]),a._v(" del "),s("code",[a._v("AuthServiceProvider")]),a._v(" de tu aplicación:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Support"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Facades"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Gate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nGate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("guessPolicyNamesUsing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$modelClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// return policy class name...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("Nota")]),a._v(" "),s("p",[a._v("Cualquier politica que está explicitamente mapeada en tu "),s("code",[a._v("AuthServiceProvider")]),a._v(" tendrá precendencia sobre cualquier posible politica auto-descubierta.")])]),a._v(" "),s("p",[s("a",{attrs:{name:"writing-policies"}})]),a._v(" "),s("h2",{attrs:{id:"escribiendo-politicas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#escribiendo-politicas","aria-hidden":"true"}},[a._v("#")]),a._v(" Escribiendo Políticas")]),a._v(" "),s("p",[s("a",{attrs:{name:"policy-methods"}})]),a._v(" "),s("h3",{attrs:{id:"metodos-de-politica"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metodos-de-politica","aria-hidden":"true"}},[a._v("#")]),a._v(" Métodos de Política")]),a._v(" "),s("p",[a._v("Una vez que la política haya sido registrada, puedes agregar métodos para cada acción a autorizar. Por ejemplo, vamos a definir un método "),s("code",[a._v("update")]),a._v(" en nuestro "),s("code",[a._v("PostPolicy")]),a._v(" para detirminar si un "),s("code",[a._v("User")]),a._v(" dado puede actualizar una instancia de un "),s("code",[a._v("Post")]),a._v(".")]),a._v(" "),s("p",[a._v("El método "),s("code",[a._v("update")]),a._v(" recibirá una instancia de "),s("code",[a._v("User")]),a._v(" y de "),s("code",[a._v("Post")]),a._v(" como sus argumentos y debería retornar "),s("code",[a._v("true")]),a._v(" o "),s("code",[a._v("false")]),a._v(" indicando si el usuario está autorizado para actualizar el "),s("code",[a._v("Post")]),a._v(" o no. En el siguiente ejemplo, vamos a verificar si el "),s("code",[a._v("id")]),a._v(" del usuario concuerda con el atributo "),s("code",[a._v("user_id")]),a._v(" del post:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Policies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PostPolicy")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n    * Determine if the given post can be updated by the user.\n    *\n    * @param  \\App\\User  $user\n    * @param  \\App\\Post  $post\n    * @return bool\n    */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("User "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Post "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("user_id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),s("p",[a._v("Puedes continuar definiendo métodos adicionales en la política como sea necesario para las diferentes acciones que esté autorice. Por ejemplo, puedes definir métodos "),s("code",[a._v("view")]),a._v(" o "),s("code",[a._v("delete")]),a._v(" para autorizar varias acciones de "),s("code",[a._v("Post")]),a._v(", pero recuerda que eres libre de darle los nombres que quieras a los métodos de la política.")]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("Si usas la opción "),s("code",[a._v("--model")]),a._v(" cuando generes tu política con el comando de Artisan, éste contendrá métodos para las acciones "),s("code",[a._v("view")]),a._v(", "),s("code",[a._v("create")]),a._v(", "),s("code",[a._v("update")]),a._v(", "),s("code",[a._v("delete")]),a._v(", "),s("code",[a._v("restore")]),a._v(" y "),s("code",[a._v("forceDelete")]),a._v(".")])]),a._v(" "),s("p",[s("a",{attrs:{name:"methods-without-models"}})]),a._v(" "),s("h3",{attrs:{id:"metodos-sin-modelos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metodos-sin-modelos","aria-hidden":"true"}},[a._v("#")]),a._v(" Métodos sin Modelos")]),a._v(" "),s("p",[a._v("Algunos métodos de políticas solo reciben el usuario autenticado y no una instancia del modelo que autorizan. Esta situación es común cuando autorizamos acciones "),s("code",[a._v("create")]),a._v(". Por ejemplo, si estás creando un blog, puedes querer revisar si un usuario está autorizado para crear nuevos posts o no.")]),a._v(" "),s("p",[a._v("Cuando definas métodos de política que no recibirán una instancia de otro modelo, así como el método "),s("code",[a._v("create")]),a._v(", debes definir el método con el usuario como único parámetro:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n* Determine if the given user can create posts.\n*\n* @param  \\App\\User  $user\n* @return bool\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("User "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("a",{attrs:{name:"guest-users"}})]),a._v(" "),s("h3",{attrs:{id:"usuarios-invitados"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usuarios-invitados","aria-hidden":"true"}},[a._v("#")]),a._v(" Usuarios Invitados")]),a._v(" "),s("p",[a._v("Por defecto, todos los gates y políticas automáticamente retornan "),s("code",[a._v("false")]),a._v(' si la petición HTTP entrante no fue iniciada por un usuario autenticado. Sin embargo, puedes permitir que estas comprobaciones de autorización sean pasadas a tus gates y políticas con una declaración de tipo "opcional" o suministrando un valor por defecto '),s("code",[a._v("null")]),a._v(" para la definición del argumento de usuario:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Policies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PostPolicy")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n    * Determine if the given post can be updated by the user.\n    *\n    * @param  \\App\\User  $user\n    * @param  \\App\\Post  $post\n    * @return bool\n    */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v("User "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Post "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("user_id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),s("p",[s("a",{attrs:{name:"policy-filters"}})]),a._v(" "),s("h3",{attrs:{id:"filtros-de-politica"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filtros-de-politica","aria-hidden":"true"}},[a._v("#")]),a._v(" Filtros de Política")]),a._v(" "),s("p",[a._v("Es posible que quieras autorizar todas las acciones para algunos usuarios en un política dada. Para lograr esto, define un método "),s("code",[a._v("before")]),a._v(" en la política. El método "),s("code",[a._v("before")]),a._v(" será ejecutado antes de los otros métodos en la política, dándote la oportunidad de autorizar la acción antes que el método destinado de la política sea llamado. Esta característica es comunmente usada para otorgar autorización a los administradores de la aplicación para que ejecuten cualquier acción:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("before")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ability")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isSuperAdmin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("Si quisieras denegar todas las autorizaciones para un usuario deberías retornar "),s("code",[a._v("false")]),a._v(" en el método "),s("code",[a._v("before")]),a._v(". Si retornas "),s("code",[a._v("null")]),a._v(", la decisión de autorización recaerá sobre el método de la política.")]),a._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("Nota")]),a._v(" "),s("p",[a._v("El método "),s("code",[a._v("before")]),a._v(" de una clase política no será llamado si la clase no contiene un método con un nombre que concuerde con el nombre de la habilidad siendo revisada.")])]),a._v(" "),s("p",[s("a",{attrs:{name:"authorizing-actions-using-policies"}})]),a._v(" "),s("h2",{attrs:{id:"autorizando-acciones-usando-politicas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autorizando-acciones-usando-politicas","aria-hidden":"true"}},[a._v("#")]),a._v(" Autorizando Acciones Usando Políticas")]),a._v(" "),s("p",[s("a",{attrs:{name:"via-the-user-model"}})]),a._v(" "),s("h3",{attrs:{id:"via-el-modelo-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-el-modelo-user","aria-hidden":"true"}},[a._v("#")]),a._v(" Vía el Modelo User")]),a._v(" "),s("p",[a._v("El modelo "),s("code",[a._v("User")]),a._v(" que se incluye por defecto en tu aplicación de Laravel trae dos métodos para autorizar acciones: "),s("code",[a._v("can")]),a._v(" y "),s("code",[a._v("cant")]),a._v(" (puede y no puede). El método "),s("code",[a._v("can")]),a._v(" acepta el nombre de la acción que deseas autorizar y el modelo relevante. Por ejemplo, vamos a determinar si un usuario está autorizado para actualizar un "),s("code",[a._v("Post")]),a._v(" dado:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("Si una "),s("a",{attrs:{href:"#registering-policies"}},[a._v("política está registrado")]),a._v(" para el modelo dado, el método "),s("code",[a._v("can")]),a._v(" automáticamente llamará a la política apropiada y retornará un resultado boleano. Si no se ha registrado una política para el modelo dado, el método "),s("code",[a._v("can")]),a._v(" intentará llamar al Gate basado en Closures que coincida con la acción dada.")]),a._v(" "),s("h4",{attrs:{id:"acciones-que-no-requieren-modelos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acciones-que-no-requieren-modelos","aria-hidden":"true"}},[a._v("#")]),a._v(" Acciones que no requieren modelos")]),a._v(" "),s("p",[a._v("Recuerda, algunas acciones como "),s("code",[a._v("create")]),a._v(" pueden no requerir de la instancia de un modelo. En estas situaciones, puedes pasar el nombre de una clase al método "),s("code",[a._v("can")]),a._v(". El nombre de la clase ser usado para determinar cuál política usar cuando se autorice la acción:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// Executes the "create" method on the relevant policy...')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("a",{attrs:{name:"via-middleware"}})]),a._v(" "),s("h3",{attrs:{id:"via-middleware"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-middleware","aria-hidden":"true"}},[a._v("#")]),a._v(" Vía Middleware")]),a._v(" "),s("p",[a._v("Laravel incluye un middleware que puede autorizar acciones antes de que la petición entrante alcance tus rutas o controladores. Por defecto, el middleware "),s("code",[a._v("Illuminate\\Auth\\Middleware\\Authorize")]),a._v(" es asignado a la llave "),s("code",[a._v("can")]),a._v(" de tu clase "),s("code",[a._v("App\\Http\\Kernel")]),a._v(". Vamos a explorar un ejemplo usando el middleware "),s("code",[a._v("can")]),a._v(" para autorizar que un usuario pueda actualizar un post de un blog:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nRoute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'/post/{post}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Post "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user may update the post...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("middleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'can:update,post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("En este ejemplo, estamos pasando al middleware "),s("code",[a._v("can")]),a._v(" dos argumentos, el primero es el nombre de la acción que deseamos autorizar y el segundo es el parámetro de la ruta que deseamos pasar al método de la política. En este caso, como estamos usando "),s("a",{attrs:{href:"/docs/%7B%7Bversion%7D%7D/routing#implicit-binding"}},[a._v("implicit model binding")]),a._v(", un modelo "),s("code",[a._v("Post")]),a._v(" ser pasado al método de la política. Si el usuario no está autorizado a ejecutar la acción dada, el middleware generará una respuesta HTTP con el código de estatus "),s("code",[a._v("403")]),a._v(".")]),a._v(" "),s("h4",{attrs:{id:"acciones-que-no-requieren-modelos-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acciones-que-no-requieren-modelos-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Acciones que no requieren modelos")]),a._v(" "),s("p",[a._v("Como mencionamos antes, algunas acciones como "),s("code",[a._v("create")]),a._v(" pueden no requerir de una instancia de un modelo. En estas situaciones, puedes pasar el nombre de la clase al middleware. El nombre de la clase será usado para determinar cuál política usar para autorizar la acción:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("Route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'/post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user may create posts...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("middleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'can:create,App\\Post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("a",{attrs:{name:"via-controller-helpers"}})]),a._v(" "),s("h3",{attrs:{id:"via-helpers-de-controladores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-helpers-de-controladores","aria-hidden":"true"}},[a._v("#")]),a._v(" Vía Helpers de Controladores")]),a._v(" "),s("p",[a._v("Además de proveer métodos útiles en el modelo "),s("code",[a._v("User")]),a._v(", Laravel también provee un método muy útil llamado "),s("code",[a._v("authorize")]),a._v(" en cualquier controlador que extienda la clase base "),s("code",[a._v("App\\Http\\Controllers\\Controller")]),a._v(". Como el método "),s("code",[a._v("can")]),a._v(", este método acepta el nombre de la acción que quieras autorizar y el modelo relevante. Si la acción no es autorizada, el método "),s("code",[a._v("authorize")]),a._v(" arrojará una excepción de tipo "),s("code",[a._v("Illuminate\\Auth\\Access\\AuthorizationException")]),a._v(", la cual será convertida por el manejador de excepciones por defecto de Laravel en una respuesta HTTP con un código "),s("code",[a._v("403")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controllers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controllers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PostController")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Controller")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n    * Update the given blog post.\n    *\n    * @param  Request  $request\n    * @param  Post  $post\n    * @return Response\n    * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n    */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Request "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Post "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("authorize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user can update the blog post...")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),s("h4",{attrs:{id:"acciones-que-no-requieren-modelos-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acciones-que-no-requieren-modelos-3","aria-hidden":"true"}},[a._v("#")]),a._v(" Acciones que no requieren modelos")]),a._v(" "),s("p",[a._v("Como hemos discutido previamente, algunas acciones como "),s("code",[a._v("create")]),a._v(" pueden no requerir una instancia de un modelo. En estas situaciones, puedes pasar el nombre de la clase al método "),s("code",[a._v("authorize")]),a._v(". El nombre de la clase determinará la política a usar para autorizar la acción:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n* Create a new blog post.\n*\n* @param  Request  $request\n* @return Response\n* @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Request "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("authorize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The current user can create blog posts...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"autorizando-controladores-de-recursos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autorizando-controladores-de-recursos","aria-hidden":"true"}},[a._v("#")]),a._v(" Autorizando Controladores De Recursos")]),a._v(" "),s("p",[a._v("Si estás utilizando "),s("a",{attrs:{href:"/docs/%7B%7Bversion%7D%7D/controllers#resource-controllers"}},[a._v("controladores de recursos")]),a._v(", puedes hacer uso del método "),s("code",[a._v("authorizeResource")]),a._v(" en el constructor del controlador. Este método agregará la definición de middleware "),s("code",[a._v("can")]),a._v(" apropiada a los métodos del controlador de recursos.")]),a._v(" "),s("p",[a._v("El método "),s("code",[a._v("authorizeResource")]),a._v(" acepta el nombre de clase del modelo como primer argumento y el nombre del parametro de ruta / petición que contendrá el ID del modelo como segundo argumento:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controllers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Illuminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("use")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controllers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PostController")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Controller")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("__construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("authorizeResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'post'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("Puedes usar el comando "),s("code",[a._v("make:policy")]),a._v(" con la opción "),s("code",[a._v("--model")]),a._v(" para rápidamente generar una clase de política para un modelo dado: "),s("code",[a._v("php artisan make:policy PostPolicy --model=Post")]),a._v(".")])]),a._v(" "),s("p",[s("a",{attrs:{name:"via-blade-templates"}})]),a._v(" "),s("h3",{attrs:{id:"via-plantillas-de-blade"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-plantillas-de-blade","aria-hidden":"true"}},[a._v("#")]),a._v(" Vía Plantillas de Blade")]),a._v(" "),s("p",[a._v("Cuando escribas plantillas de Blade, puedes querer mostrar una porción de la página solo si el usuario está autorizado para ejecutar una acción determinada. Por ejemplo, puedes querer mostrar un formulario para actualizar un post solo si el usuario puede actualizar el post. En situaciones así, puedes usar las directivas "),s("code",[a._v("@can")]),a._v(" y "),s("code",[a._v("@cannot")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can Update The Post "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("elsecan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" App\\"),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can Create "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("New")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Post")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@endcan\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cannot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can"),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'t Update The Post --\x3e\n@elsecannot('")]),a._v("create"),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("', App\\Post::class)\n    \x3c!-- The Current User Can'")]),a._v("t Create "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("New")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Post")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@endcannot\n")])])]),s("p",[a._v("Estas directivas son accesos directos convenientes para no tener que escribir sentencias "),s("code",[a._v("@if")]),a._v(" y "),s("code",[a._v("@unless")]),a._v(". Las sentencias "),s("code",[a._v("@can")]),a._v(" y "),s("code",[a._v("@cannot")]),a._v(" de arriba son equivalentes a las siguientes sentencias, respectivamente:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("@"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can Update The Post "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("endif")]),a._v("\n\n@unless "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can't Update The Post "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@endunless\n")])])]),s("h4",{attrs:{id:"acciones-que-no-requieren-modelos-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acciones-que-no-requieren-modelos-4","aria-hidden":"true"}},[a._v("#")]),a._v(" Acciones que no requieren modelos")]),a._v(" "),s("p",[a._v("Así como otros métodos de autorización, puedes pasar el nombre de una clase a las directivas "),s("code",[a._v("@can")]),a._v(" y "),s("code",[a._v("@cannot")]),a._v(" si la acción no requiere una instancia de un modelo:")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("can")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" App\\"),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can Create Posts "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@endcan\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cannot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'create'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" App\\"),s("span",{pre:!0,attrs:{class:"token package"}},[a._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" The Current User Can't Create Posts "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n@endcannot\n")])])])])}],!1,null,null,null);t.default=n.exports}}]);